[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "youtube-infographic-backend"
version = "1.0.0"
description = "Backend API for YouTube to Infographic Generator"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "YouTube Infographic Generator Team", email = "your-email@example.com"},
]
keywords = ["youtube", "infographic", "ai", "fastapi", "vector-database"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "youtube-transcript-api>=0.6.1",
    "pillow>=10.1.0",
    "python-multipart>=0.0.6",
    "pydantic>=2.5.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "openai>=1.3.0",
    "qdrant-client>=1.7.0",
    "numpy>=1.24.3",
    "boto3>=1.34.0",
    "psycopg2-binary>=2.9.9",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "transformers>=4.35.0",
    "tqdm>=4.66.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "isort>=5.12.0",
]
prod = [
    "gunicorn>=20.1.0",
    "uvicorn[standard]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/your-username/youtube-infographic-generator"
Documentation = "https://github.com/your-username/youtube-infographic-generator#readme"
Repository = "https://github.com/your-username/youtube-infographic-generator.git"
"Bug Tracker" = "https://github.com/your-username/youtube-infographic-generator/issues"

[project.scripts]
youtube-infographic-api = "main:app"

[tool.black]
line-length = 127
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 127
known_first_party = ["services", "scripts"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "youtube_transcript_api.*",
    "qdrant_client.*",
    "boto3.*",
    "psycopg2.*",
    "PIL.*",
    "torch.*",
    "torchvision.*",
    "transformers.*",
    "clip.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]